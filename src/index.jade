doctype
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    style: :stylus
      @viewport
        width device-width
        zoom 1
      #nac td
        border thin black solid
        width 1em
        height 1em
    script: :babel
      document.addEventListener('DOMContentLoaded', () => {

        var playersTurn = 'X';
        var game = new Array(3);
        for (var i = 0; i < 3; i++) {
          game[i] = ['', '', '']
        }

        var tdList = document.getElementById('nac')
          .querySelectorAll('td');

        function highlightWin(el1, el2, el3) {
          console.log(playersTurn + ' has won');
          el1.innerHTML = '*';
          el2.innerHTML = '*';
          el3.innerHTML = '*';
        }

        function checkWon() {
          // horizontals
          for (var y = 0; y < 3; y++) {
            if (game[y][0] !== '' && (game[y][0] === game[y][1]) && (game[y][1] === game[y][2])) {
              highlightWin(
                tdList[y*3],
                tdList[y*3 + 1],
                tdList[y*3 + 2]);
              return;
            }
          }

          // verticals
          for (var x = 0; x < 3; x++) {
            if (game[0][x] !== '' && (game[0][x] === game[1][x]) && (game[1][x] === game[2][x])) {
              highlightWin(
                tdList[x],
                tdList[1*3 + x],
                tdList[2*3 + x]);
              return;
            }
          }

          // diagonals
          if (game[0][0] !== '' && (game[0][0] === game[1][1]) && (game[1][1] === game[2][2])) {
            highlightWin(
              tdList[0], tdList[4], tdList[8]);
            return;
          }
          if (game[0][2] !== '' && (game[0][2] === game[1][1]) && (game[1][1] === game[2][0])) {
            highlightWin(
            tdList[2], tdList[4], tdList[6]);
            return;
          }
        }

        function createOnClick(y, x) {
          tdList[y*3 + x].addEventListener('click', (event) => {
            console.log('tdList[' + (y*3 + x).toString() + ']: y = ' + y.toString() + ', x = ' + x.toString());

            if (game[y][x] === '') {
              game[y][x] = playersTurn;
              event.target.innerHTML = playersTurn;

              checkWon();

              if (playersTurn === 'X') {
                playersTurn = 'O';
              } else {
                playersTurn = 'X';
              }
            }
          });
        }

        for (var y = 0; y < 3; y++) {
          for (var x = 0; x < 3; x++) {
            createOnClick(y, x);
          }
        }
      });
  body
    h1 Noughts and crosses
    table#nac
      tr
        td
        td
        td
      tr
        td
        td
        td
      tr
        td
        td
        td